% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g3_data.R
\name{g3_data}
\alias{g3_data}
\title{Aggregate count data from a data frame to gadget3}
\usage{
g3_data(
  x,
  params = list(),
  method = "count",
  column_names = c(year = "year", step = "month", area = "areacell"),
  floating_point_correction = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{x}{A data frame, tibble or data table}

\item{params}{A list of parameters defining the grouping. See details in \code{mfdb_sample_count}.}

\item{method}{A character defining the aggregation method: use \code{"count"} to count occurrences or \strong{name of the column} that should be summarized in \code{x} based on grouping defined by \code{params}. In other cases, use the column name that should be aggregated. The column will be summed based on year, step, area, and any additional columns defined in \code{params}.}

\item{column_names}{A named vector explaining the column names which gadget3 expects in \code{x} if not the same than in mfdb. See the default suggestion for example.}

\item{floating_point_correction}{Logical indicating whether 1e-6 should be added to all numeric columns except for \code{year} and \code{step}. Corrects for floating point issues associated with certain numbers such as 28 and 57.}

\item{verbose}{Logical indicating whether the function should return messages about potential assumptions when expected data are not specified.}
}
\description{
Aggregates data from a data frame ready to be passed to gadget3. Useful for generating datasets for \code{g3l_catchdistribution}, \code{g3l_abundancedistribution} and \code{g3_timeareadata}. Imitates the behavior of \code{mfdb_sample_*} functions and returns the required object attributes as instructed by the \code{params} argument.
}
\details{
This function attempts to do the same than \code{mfdb_sample_*} functions: summarise data ready for gadget3, with the difference that this function uses dataframes instead of a SQL database as input data. Consequently, this function should be independent of mfdb if the functions that generate groups and intervals as the mfdb package (\code{mfdb_interval}, \code{mfdb_group}) were imported to a project with this function.

Importantly, \code{g3_data()} does not attempt to filter other data than length unlike \code{mfdb_sample_*} functions that filter all columns passed to \code{params}.
}
